/**
 * Плагин GmShortcode для TinyMCE.
 * 
 * Диалоговое окно выбора и добавления файла в редактор TinyMCE. 
 * 
 * Copyright (c) 2015 Веб-студия GearMagic
 * 
 * Contact: https://gearmagic.ru
 *
 * @author    Anton Tivonenko
 * @copyright (c) 2015, by Anton Tivonenko, anton.tivonenko@gmail.com
 * @date      Oct 01, 2015
 * @version   $Id: 1.0 $
 *
 * @license plugin.min.js is licensed under the terms of the Open Source
 * LGPL 3.0 license. Commercial use is permitted to the extent that the
 * code/component(s) do NOT become part of another Open Source or Commercially
 * development library or toolkit without explicit permission.
 */

Ext.ns('Gm.wd.tinymce.gmshortcode');

!function(){
    let manager = tinymce.util.Tools.resolve('tinymce.PluginManager');

    /**
     * Шорткоды редактора имеют свойства:
     * {
     *     type: {string}, // у какого компонента брать шорткод (widget, module, extension)
     *     id: {numeric}, // идент. компонента в базе данных
     *     name: {string}, // имя тега шорткод
     *     tag: {string}, // тег шорткода ('[foobar][/foobar]')
     *     text: {string}, // название компонента или шорткода
     *     icon: {string} // значок меню/кнопки шорткода
     * }
     */
    let shortcodes = Gm.settings.editorShortcodes || [];
    if (shortcodes.length > 0) {
        manager.add('gmshortcode', function (editor, url) {
            'use strict';

            let button = null, 
                scriptLoader = new tinymce.dom.ScriptLoader();

            let menu = [], 
                routes = {
                    widget: '@backend/marketplace/wmanager/hsettings/view/',
                    module: '@backend/marketplace/mmanager/hsettings/view/',
                    extension: '@backend/marketplace/emanager/hsettings/view/'
                };
            for (const shortcode of shortcodes) {
                // если не указан тег шорткода, то вызываем настройки шорткода
                if (shortcode.tag === null)
                    menu.push({
                        text: shortcode.text,
                        image: shortcode.icon,
                        icon: 'shortcode-item', // любое значение, чтобы перекрыть класс css
                        onclick: () => {
                            Gm.app.tmp.editor = editor;
                            Gm.app.widget.load(routes[shortcode.type] + shortcode.id + '?name=' + shortcode.name, null, true);
                        }
                    });
                else
                    menu.push({
                        text: shortcode.text,
                        image: shortcode.icon,
                        icon: 'shortcode-item', // любое значение, чтобы перекрыть класс css
                        onclick: () => { editor.insertContent(shortcode.tag); }
                    });
            }

            editor.addButton('gmshortcode', {
                type: 'menubutton',
                image: url + '/img/icon.svg',
                tooltip: 'Add a shortcode for a component (module, extension, widget)',
                menu: menu,
                onPostRender: function () { button = this; }
            });

            scriptLoader.add(url + '/' + tinymce.settings.language +'.js');
            scriptLoader.loadQueue(function () {
                let lo = Gm.wd.tinymce.gmshortcode.locale;
                button.settings.tooltip = lo.btnTooltip;
            });    
        });
    }
}();